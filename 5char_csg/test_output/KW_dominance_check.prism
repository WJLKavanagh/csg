// Author:	William Kavanagh, University of Glasgow
// Created:	2019-08-05
// File:		CSG auto-generated model
// Comment:	This file is a generator for a later strategy for KW
smg
// Configuration DELTA9_30:
const int Knight_health = 9;
const int Knight_damage = 4;
const double Knight_accuracy = 0.32999999999999974;

const int Archer_health = 7;
const int Archer_damage = 2;
const double Archer_accuracy = 0.6699999999999997;

const int Wizard_health = 7;
const int Wizard_damage = 3;
const double Wizard_accuracy = 0.3999999999999997;

const int Rogue_health = 6;
const int Rogue_damage = 3;
const int Rogue_execute = 6;
const double Rogue_accuracy = 0.43999999999999984;

const int Healer_health = 7;
const int Healer_damage = 2;
const int Healer_heal = 2;
const double Healer_accuracy = 0.4999999999999998;

player p1
	[p1_K_K],	[p1_K_A],	[p1_K_W],	[p1_K_R],	[p1_K_H],	[p1_A_K],	[p1_A_KA],	[p1_A_KW],
	[p1_A_KR],	[p1_A_KH],	[p1_A_A],	[p1_A_AW],	[p1_A_AR],	[p1_A_AH],	[p1_A_W],	[p1_A_WR],
	[p1_A_WH],	[p1_A_R],	[p1_A_RH],	[p1_A_H],	[p1_W_K],	[p1_W_A],	[p1_W_W],	[p1_W_R],
	[p1_W_H],	[p1_R_K],	[p1_R_A],	[p1_R_W],	[p1_R_R],	[p1_R_H],	[p1_H_KK],	[p1_H_KA],
	[p1_H_KW],	[p1_H_KR],	[p1_H_KH],	[p1_H_AK],	[p1_H_AA],	[p1_H_AW],	[p1_H_AR],	[p1_H_AH],
	[p1_H_WK],	[p1_H_WA],	[p1_H_WW],	[p1_H_WR],	[p1_H_WH],	[p1_H_RK],	[p1_H_RA],	[p1_H_RW],
	[p1_H_RR],	[p1_H_RH],	[p1_H_HK],	[p1_H_HA],	[p1_H_HW],	[p1_H_HR],	[p1_H_HH]
endplayer

player p2
	[p2_K_K],	[p2_K_A],	[p2_K_W],	[p2_K_R],	[p2_K_H],	[p2_A_K],	[p2_A_KA],	[p2_A_KW],
	[p2_A_KR],	[p2_A_KH],	[p2_A_A],	[p2_A_AW],	[p2_A_AR],	[p2_A_AH],	[p2_A_W],	[p2_A_WR],
	[p2_A_WH],	[p2_A_R],	[p2_A_RH],	[p2_A_H],	[p2_W_K],	[p2_W_A],	[p2_W_W],	[p2_W_R],
	[p2_W_H],	[p2_R_K],	[p2_R_A],	[p2_R_W],	[p2_R_R],	[p2_R_H],	[p2_H_KK],	[p2_H_KA],
	[p2_H_KW],	[p2_H_KR],	[p2_H_KH],	[p2_H_AK],	[p2_H_AA],	[p2_H_AW],	[p2_H_AR],	[p2_H_AH],
	[p2_H_WK],	[p2_H_WA],	[p2_H_WW],	[p2_H_WR],	[p2_H_WH],	[p2_H_RK],	[p2_H_RA],	[p2_H_RW],
	[p2_H_RR],	[p2_H_RH],	[p2_H_HK],	[p2_H_HA],	[p2_H_HW],	[p2_H_HR],	[p2_H_HH],	[choose_KA],
	[choose_KW],	[choose_KR],	[choose_KH],	[choose_AW],	[choose_AR],	[choose_AH],	[choose_WR],
	[choose_WH],	[choose_RH]
endplayer

module game
	attack	: [0..110];
	turn	: [0..2];
	p1K	: [0..Knight_health]		init Knight_health; // P1 Knight
	p1A	: [0..Archer_health]		init 0; // P1 Archer not used
	p1W	: [0..Wizard_health]		init Wizard_health; // P1 Wizard
	p1R	: [0..Rogue_health]		init 0; // P1 Rogue not used
	p1H	: [0..Healer_health]		init 0; // P1 Healer not used
	p1_stun	:	[0..5];				//0 - none, 1 - Knight stunned, 2 - Archer stunned, 3 - Wizard stunned .. etc
	p2K	: [0..Knight_health]		init Knight_health; // P2 Knight
	p2A	: [0..Archer_health]		init Archer_health; // P2 Archer
	p2W	: [0..Wizard_health]		init Wizard_health; // P2 Wizard
	p2R	: [0..Rogue_health]		init Rogue_health; // P2 Rogue
	p2H	: [0..Healer_health]		init Healer_health; // P2 Healer
	p2_stun	:	[0..5];				//0 - none, 1 - Knight stunned, 2 - Archer stunned, 3 - Wizard stunned .. etc

// Choose opposing material
  [choose_KA]	p2K > 0 & p2A > 0 & p2W > 0 & p2R > 0 & p2H > 0 ->
    (p2W' = 0) & (p2R' = 0) & (p2H' = 0);
  [choose_KW]	p2K > 0 & p2A > 0 & p2W > 0 & p2R > 0 & p2H > 0 ->
    (p2A' = 0) & (p2R' = 0) & (p2H' = 0);
  [choose_KR]	p2K > 0 & p2A > 0 & p2W > 0 & p2R > 0 & p2H > 0 ->
    (p2A' = 0) & (p2W' = 0) & (p2H' = 0);
  [choose_KH]	p2K > 0 & p2A > 0 & p2W > 0 & p2R > 0 & p2H > 0 ->
    (p2A' = 0) & (p2W' = 0) & (p2R' = 0);
  [choose_AW]	p2K > 0 & p2A > 0 & p2W > 0 & p2R > 0 & p2H > 0 ->
    (p2K' = 0) & (p2R' = 0) & (p2H' = 0);
  [choose_AR]	p2K > 0 & p2A > 0 & p2W > 0 & p2R > 0 & p2H > 0 ->
    (p2K' = 0) & (p2W' = 0) & (p2H' = 0);
  [choose_AH]	p2K > 0 & p2A > 0 & p2W > 0 & p2R > 0 & p2H > 0 ->
    (p2K' = 0) & (p2W' = 0) & (p2R' = 0);
  [choose_WR]	p2K > 0 & p2A > 0 & p2W > 0 & p2R > 0 & p2H > 0 ->
    (p2K' = 0) & (p2A' = 0) & (p2H' = 0);
  [choose_WH]	p2K > 0 & p2A > 0 & p2W > 0 & p2R > 0 & p2H > 0 ->
    (p2K' = 0) & (p2A' = 0) & (p2R' = 0);
  [choose_RH]	p2K > 0 & p2A > 0 & p2W > 0 & p2R > 0 & p2H > 0 ->
    (p2K' = 0) & (p2A' = 0) & (p2W' = 0);

	[coin_flip] turn = 0 & p2K*p2A*p2W = 0 ->
		0.5 : (turn' = 1) + 0.5 : (turn' = 2);

// P1:
	[p1_K_K] attack = 0 & turn = 1 & p1K > 0 & p1_stun != 1 & p2K > 0 ->
		 (attack' = 1) & (p1_stun' = 0);
	[p1_K_A] attack = 0 & turn = 1 & p1K > 0 & p1_stun != 1 & p2A > 0 ->
		 (attack' = 2) & (p1_stun' = 0);
	[p1_K_W] attack = 0 & turn = 1 & p1K > 0 & p1_stun != 1 & p2W > 0 ->
		 (attack' = 3) & (p1_stun' = 0);
	[p1_K_R] attack = 0 & turn = 1 & p1K > 0 & p1_stun != 1 & p2R > 0 ->
		 (attack' = 4) & (p1_stun' = 0);
	[p1_K_H] attack = 0 & turn = 1 & p1K > 0 & p1_stun != 1 & p2H > 0 ->
		 (attack' = 5) & (p1_stun' = 0);
	[p1_A_K] attack = 0 & turn = 1 & p1A > 0 & p1_stun != 2 & p2K > 0 ->
		 (attack' = 6) & (p1_stun' = 0);
	[p1_A_KA] attack = 0 & turn = 1 & p1A > 0 & p1_stun != 2 & p2K > 0 & p2A > 0 ->
		 (attack' = 7) & (p1_stun' = 0);
	[p1_A_KW] attack = 0 & turn = 1 & p1A > 0 & p1_stun != 2 & p2K > 0 & p2W > 0 ->
		 (attack' = 8) & (p1_stun' = 0);
	[p1_A_KR] attack = 0 & turn = 1 & p1A > 0 & p1_stun != 2 & p2K > 0 & p2R > 0 ->
		 (attack' = 9) & (p1_stun' = 0);
	[p1_A_KH] attack = 0 & turn = 1 & p1A > 0 & p1_stun != 2 & p2K > 0 & p2H > 0 ->
		 (attack' = 10) & (p1_stun' = 0);
	[p1_A_A] attack = 0 & turn = 1 & p1A > 0 & p1_stun != 2 & p2A > 0 ->
		 (attack' = 11) & (p1_stun' = 0);
	[p1_A_AW] attack = 0 & turn = 1 & p1A > 0 & p1_stun != 2 & p2A > 0 & p2W > 0 ->
		 (attack' = 12) & (p1_stun' = 0);
	[p1_A_AR] attack = 0 & turn = 1 & p1A > 0 & p1_stun != 2 & p2A > 0 & p2R > 0 ->
		 (attack' = 13) & (p1_stun' = 0);
	[p1_A_AH] attack = 0 & turn = 1 & p1A > 0 & p1_stun != 2 & p2A > 0 & p2H > 0 ->
		 (attack' = 14) & (p1_stun' = 0);
	[p1_A_W] attack = 0 & turn = 1 & p1A > 0 & p1_stun != 2 & p2W > 0 ->
		 (attack' = 15) & (p1_stun' = 0);
	[p1_A_WR] attack = 0 & turn = 1 & p1A > 0 & p1_stun != 2 & p2W > 0 & p2R > 0 ->
		 (attack' = 16) & (p1_stun' = 0);
	[p1_A_WH] attack = 0 & turn = 1 & p1A > 0 & p1_stun != 2 & p2W > 0 & p2H > 0 ->
		 (attack' = 17) & (p1_stun' = 0);
	[p1_A_R] attack = 0 & turn = 1 & p1A > 0 & p1_stun != 2 & p2R > 0 ->
		 (attack' = 18) & (p1_stun' = 0);
	[p1_A_RH] attack = 0 & turn = 1 & p1A > 0 & p1_stun != 2 & p2R > 0 & p2H > 0 ->
		 (attack' = 19) & (p1_stun' = 0);
	[p1_A_H] attack = 0 & turn = 1 & p1A > 0 & p1_stun != 2 & p2H > 0 ->
		 (attack' = 20) & (p1_stun' = 0);
	[p1_W_K] attack = 0 & turn = 1 & p1W > 0 & p1_stun != 3 & p2K > 0 ->
		 (attack' = 21) & (p1_stun' = 0);
	[p1_W_A] attack = 0 & turn = 1 & p1W > 0 & p1_stun != 3 & p2A > 0 ->
		 (attack' = 22) & (p1_stun' = 0);
	[p1_W_W] attack = 0 & turn = 1 & p1W > 0 & p1_stun != 3 & p2W > 0 ->
		 (attack' = 23) & (p1_stun' = 0);
	[p1_W_R] attack = 0 & turn = 1 & p1W > 0 & p1_stun != 3 & p2R > 0 ->
		 (attack' = 24) & (p1_stun' = 0);
	[p1_W_H] attack = 0 & turn = 1 & p1W > 0 & p1_stun != 3 & p2H > 0 ->
		 (attack' = 25) & (p1_stun' = 0);
	[p1_R_K] attack = 0 & turn = 1 & p1R > 0 & p1_stun != 4 & p2K > 0 ->
		 (attack' = 26) & (p1_stun' = 0);
	[p1_R_A] attack = 0 & turn = 1 & p1R > 0 & p1_stun != 4 & p2A > 0 ->
		 (attack' = 27) & (p1_stun' = 0);
	[p1_R_W] attack = 0 & turn = 1 & p1R > 0 & p1_stun != 4 & p2W > 0 ->
		 (attack' = 28) & (p1_stun' = 0);
	[p1_R_R] attack = 0 & turn = 1 & p1R > 0 & p1_stun != 4 & p2R > 0 ->
		 (attack' = 29) & (p1_stun' = 0);
	[p1_R_H] attack = 0 & turn = 1 & p1R > 0 & p1_stun != 4 & p2H > 0 ->
		 (attack' = 30) & (p1_stun' = 0);
	[p1_H_KK] attack = 0 & turn = 1 & p1H > 0 & p1_stun != 5 & p2K > 0 & p1K > 0 ->
		 (attack' = 31) & (p1_stun' = 0);
	[p1_H_KA] attack = 0 & turn = 1 & p1H > 0 & p1_stun != 5 & p2K > 0 & p1A > 0 ->
		 (attack' = 32) & (p1_stun' = 0);
	[p1_H_KW] attack = 0 & turn = 1 & p1H > 0 & p1_stun != 5 & p2K > 0 & p1W > 0 ->
		 (attack' = 33) & (p1_stun' = 0);
	[p1_H_KR] attack = 0 & turn = 1 & p1H > 0 & p1_stun != 5 & p2K > 0 & p1R > 0 ->
		 (attack' = 34) & (p1_stun' = 0);
	[p1_H_KH] attack = 0 & turn = 1 & p1H > 0 & p1_stun != 5 & p2K > 0 & p1H > 0 ->
		 (attack' = 35) & (p1_stun' = 0);
	[p1_H_AK] attack = 0 & turn = 1 & p1H > 0 & p1_stun != 5 & p2A > 0 & p1K > 0 ->
		 (attack' = 36) & (p1_stun' = 0);
	[p1_H_AA] attack = 0 & turn = 1 & p1H > 0 & p1_stun != 5 & p2A > 0 & p1A > 0 ->
		 (attack' = 37) & (p1_stun' = 0);
	[p1_H_AW] attack = 0 & turn = 1 & p1H > 0 & p1_stun != 5 & p2A > 0 & p1W > 0 ->
		 (attack' = 38) & (p1_stun' = 0);
	[p1_H_AR] attack = 0 & turn = 1 & p1H > 0 & p1_stun != 5 & p2A > 0 & p1R > 0 ->
		 (attack' = 39) & (p1_stun' = 0);
	[p1_H_AH] attack = 0 & turn = 1 & p1H > 0 & p1_stun != 5 & p2A > 0 & p1H > 0 ->
		 (attack' = 40) & (p1_stun' = 0);
	[p1_H_WK] attack = 0 & turn = 1 & p1H > 0 & p1_stun != 5 & p2W > 0 & p1K > 0 ->
		 (attack' = 41) & (p1_stun' = 0);
	[p1_H_WA] attack = 0 & turn = 1 & p1H > 0 & p1_stun != 5 & p2W > 0 & p1A > 0 ->
		 (attack' = 42) & (p1_stun' = 0);
	[p1_H_WW] attack = 0 & turn = 1 & p1H > 0 & p1_stun != 5 & p2W > 0 & p1W > 0 ->
		 (attack' = 43) & (p1_stun' = 0);
	[p1_H_WR] attack = 0 & turn = 1 & p1H > 0 & p1_stun != 5 & p2W > 0 & p1R > 0 ->
		 (attack' = 44) & (p1_stun' = 0);
	[p1_H_WH] attack = 0 & turn = 1 & p1H > 0 & p1_stun != 5 & p2W > 0 & p1H > 0 ->
		 (attack' = 45) & (p1_stun' = 0);
	[p1_H_RK] attack = 0 & turn = 1 & p1H > 0 & p1_stun != 5 & p2R > 0 & p1K > 0 ->
		 (attack' = 46) & (p1_stun' = 0);
	[p1_H_RA] attack = 0 & turn = 1 & p1H > 0 & p1_stun != 5 & p2R > 0 & p1A > 0 ->
		 (attack' = 47) & (p1_stun' = 0);
	[p1_H_RW] attack = 0 & turn = 1 & p1H > 0 & p1_stun != 5 & p2R > 0 & p1W > 0 ->
		 (attack' = 48) & (p1_stun' = 0);
	[p1_H_RR] attack = 0 & turn = 1 & p1H > 0 & p1_stun != 5 & p2R > 0 & p1R > 0 ->
		 (attack' = 49) & (p1_stun' = 0);
	[p1_H_RH] attack = 0 & turn = 1 & p1H > 0 & p1_stun != 5 & p2R > 0 & p1H > 0 ->
		 (attack' = 50) & (p1_stun' = 0);
	[p1_H_HK] attack = 0 & turn = 1 & p1H > 0 & p1_stun != 5 & p2H > 0 & p1K > 0 ->
		 (attack' = 51) & (p1_stun' = 0);
	[p1_H_HA] attack = 0 & turn = 1 & p1H > 0 & p1_stun != 5 & p2H > 0 & p1A > 0 ->
		 (attack' = 52) & (p1_stun' = 0);
	[p1_H_HW] attack = 0 & turn = 1 & p1H > 0 & p1_stun != 5 & p2H > 0 & p1W > 0 ->
		 (attack' = 53) & (p1_stun' = 0);
	[p1_H_HR] attack = 0 & turn = 1 & p1H > 0 & p1_stun != 5 & p2H > 0 & p1R > 0 ->
		 (attack' = 54) & (p1_stun' = 0);
	[p1_H_HH] attack = 0 & turn = 1 & p1H > 0 & p1_stun != 5 & p2H > 0 & p1H > 0 ->
		 (attack' = 55) & (p1_stun' = 0);

// Forced skip
  [p1_skip]	attack = 0 & turn = 1 & p1_sum > 0 & (p1K = 0 | p1_stun = 1) & (p1A = 0 | p1_stun = 2) & (p1W = 0 | p1_stun = 3) & (p1R = 0 | p1_stun = 4) & ( p1H = 0 | p1_stun = 5) ->
	       (p1_stun' = 0) & (turn' = 2);
// P2:
	[p2_K_K] attack = 0 & turn = 2 & p2K > 0 & p2_stun != 1 & p1K > 0 ->
		(attack' = 56) & (p2_stun' = 0);
	[p2_K_A] attack = 0 & turn = 2 & p2K > 0 & p2_stun != 1 & p1A > 0 ->
		(attack' = 57) & (p2_stun' = 0);
	[p2_K_W] attack = 0 & turn = 2 & p2K > 0 & p2_stun != 1 & p1W > 0 ->
		(attack' = 58) & (p2_stun' = 0);
	[p2_K_R] attack = 0 & turn = 2 & p2K > 0 & p2_stun != 1 & p1R > 0 ->
		(attack' = 59) & (p2_stun' = 0);
	[p2_K_H] attack = 0 & turn = 2 & p2K > 0 & p2_stun != 1 & p1H > 0 ->
		(attack' = 60) & (p2_stun' = 0);
	[p2_A_K] attack = 0 & turn = 2 & p2A > 0 & p2_stun != 2 & p1K > 0 ->
		(attack' = 61) & (p2_stun' = 0);
	[p2_A_KA] attack = 0 & turn = 2 & p2A > 0 & p2_stun != 2 & p1K > 0 & p1A > 0 ->
		(attack' = 62) & (p2_stun' = 0);
	[p2_A_KW] attack = 0 & turn = 2 & p2A > 0 & p2_stun != 2 & p1K > 0 & p1W > 0 ->
		(attack' = 63) & (p2_stun' = 0);
	[p2_A_KR] attack = 0 & turn = 2 & p2A > 0 & p2_stun != 2 & p1K > 0 & p1R > 0 ->
		(attack' = 64) & (p2_stun' = 0);
	[p2_A_KH] attack = 0 & turn = 2 & p2A > 0 & p2_stun != 2 & p1K > 0 & p1H > 0 ->
		(attack' = 65) & (p2_stun' = 0);
	[p2_A_A] attack = 0 & turn = 2 & p2A > 0 & p2_stun != 2 & p1A > 0 ->
		(attack' = 66) & (p2_stun' = 0);
	[p2_A_AW] attack = 0 & turn = 2 & p2A > 0 & p2_stun != 2 & p1A > 0 & p1W > 0 ->
		(attack' = 67) & (p2_stun' = 0);
	[p2_A_AR] attack = 0 & turn = 2 & p2A > 0 & p2_stun != 2 & p1A > 0 & p1R > 0 ->
		(attack' = 68) & (p2_stun' = 0);
	[p2_A_AH] attack = 0 & turn = 2 & p2A > 0 & p2_stun != 2 & p1A > 0 & p1H > 0 ->
		(attack' = 69) & (p2_stun' = 0);
	[p2_A_W] attack = 0 & turn = 2 & p2A > 0 & p2_stun != 2 & p1W > 0 ->
		(attack' = 70) & (p2_stun' = 0);
	[p2_A_WR] attack = 0 & turn = 2 & p2A > 0 & p2_stun != 2 & p1W > 0 & p1R > 0 ->
		(attack' = 71) & (p2_stun' = 0);
	[p2_A_WH] attack = 0 & turn = 2 & p2A > 0 & p2_stun != 2 & p1W > 0 & p1H > 0 ->
		(attack' = 72) & (p2_stun' = 0);
	[p2_A_R] attack = 0 & turn = 2 & p2A > 0 & p2_stun != 2 & p1R > 0 ->
		(attack' = 73) & (p2_stun' = 0);
	[p2_A_RH] attack = 0 & turn = 2 & p2A > 0 & p2_stun != 2 & p1R > 0 & p1H > 0 ->
		(attack' = 74) & (p2_stun' = 0);
	[p2_A_H] attack = 0 & turn = 2 & p2A > 0 & p2_stun != 2 & p1H > 0 ->
		(attack' = 75) & (p2_stun' = 0);
	[p2_W_K] attack = 0 & turn = 2 & p2W > 0 & p2_stun != 3 & p1K > 0 ->
		(attack' = 76) & (p2_stun' = 0);
	[p2_W_A] attack = 0 & turn = 2 & p2W > 0 & p2_stun != 3 & p1A > 0 ->
		(attack' = 77) & (p2_stun' = 0);
	[p2_W_W] attack = 0 & turn = 2 & p2W > 0 & p2_stun != 3 & p1W > 0 ->
		(attack' = 78) & (p2_stun' = 0);
	[p2_W_R] attack = 0 & turn = 2 & p2W > 0 & p2_stun != 3 & p1R > 0 ->
		(attack' = 79) & (p2_stun' = 0);
	[p2_W_H] attack = 0 & turn = 2 & p2W > 0 & p2_stun != 3 & p1H > 0 ->
		(attack' = 80) & (p2_stun' = 0);
	[p2_R_K] attack = 0 & turn = 2 & p2R > 0 & p2_stun != 4 & p1K > 0 ->
		(attack' = 81) & (p2_stun' = 0);
	[p2_R_A] attack = 0 & turn = 2 & p2R > 0 & p2_stun != 4 & p1A > 0 ->
		(attack' = 82) & (p2_stun' = 0);
	[p2_R_W] attack = 0 & turn = 2 & p2R > 0 & p2_stun != 4 & p1W > 0 ->
		(attack' = 83) & (p2_stun' = 0);
	[p2_R_R] attack = 0 & turn = 2 & p2R > 0 & p2_stun != 4 & p1R > 0 ->
		(attack' = 84) & (p2_stun' = 0);
	[p2_R_H] attack = 0 & turn = 2 & p2R > 0 & p2_stun != 4 & p1H > 0 ->
		(attack' = 85) & (p2_stun' = 0);
	[p2_H_KK] attack = 0 & turn = 2 & p2H > 0 & p2_stun != 5 & p1K > 0 & p2K > 0 ->
		(attack' = 86) & (p2_stun' = 0);
	[p2_H_KA] attack = 0 & turn = 2 & p2H > 0 & p2_stun != 5 & p1K > 0 & p2A > 0 ->
		(attack' = 87) & (p2_stun' = 0);
	[p2_H_KW] attack = 0 & turn = 2 & p2H > 0 & p2_stun != 5 & p1K > 0 & p2W > 0 ->
		(attack' = 88) & (p2_stun' = 0);
	[p2_H_KR] attack = 0 & turn = 2 & p2H > 0 & p2_stun != 5 & p1K > 0 & p2R > 0 ->
		(attack' = 89) & (p2_stun' = 0);
	[p2_H_KH] attack = 0 & turn = 2 & p2H > 0 & p2_stun != 5 & p1K > 0 & p2H > 0 ->
		(attack' = 90) & (p2_stun' = 0);
	[p2_H_AK] attack = 0 & turn = 2 & p2H > 0 & p2_stun != 5 & p1A > 0 & p2K > 0 ->
		(attack' = 91) & (p2_stun' = 0);
	[p2_H_AA] attack = 0 & turn = 2 & p2H > 0 & p2_stun != 5 & p1A > 0 & p2A > 0 ->
		(attack' = 92) & (p2_stun' = 0);
	[p2_H_AW] attack = 0 & turn = 2 & p2H > 0 & p2_stun != 5 & p1A > 0 & p2W > 0 ->
		(attack' = 93) & (p2_stun' = 0);
	[p2_H_AR] attack = 0 & turn = 2 & p2H > 0 & p2_stun != 5 & p1A > 0 & p2R > 0 ->
		(attack' = 94) & (p2_stun' = 0);
	[p2_H_AH] attack = 0 & turn = 2 & p2H > 0 & p2_stun != 5 & p1A > 0 & p2H > 0 ->
		(attack' = 95) & (p2_stun' = 0);
	[p2_H_WK] attack = 0 & turn = 2 & p2H > 0 & p2_stun != 5 & p1W > 0 & p2K > 0 ->
		(attack' = 96) & (p2_stun' = 0);
	[p2_H_WA] attack = 0 & turn = 2 & p2H > 0 & p2_stun != 5 & p1W > 0 & p2A > 0 ->
		(attack' = 97) & (p2_stun' = 0);
	[p2_H_WW] attack = 0 & turn = 2 & p2H > 0 & p2_stun != 5 & p1W > 0 & p2W > 0 ->
		(attack' = 98) & (p2_stun' = 0);
	[p2_H_WR] attack = 0 & turn = 2 & p2H > 0 & p2_stun != 5 & p1W > 0 & p2R > 0 ->
		(attack' = 99) & (p2_stun' = 0);
	[p2_H_WH] attack = 0 & turn = 2 & p2H > 0 & p2_stun != 5 & p1W > 0 & p2H > 0 ->
		(attack' = 100) & (p2_stun' = 0);
	[p2_H_RK] attack = 0 & turn = 2 & p2H > 0 & p2_stun != 5 & p1R > 0 & p2K > 0 ->
		(attack' = 101) & (p2_stun' = 0);
	[p2_H_RA] attack = 0 & turn = 2 & p2H > 0 & p2_stun != 5 & p1R > 0 & p2A > 0 ->
		(attack' = 102) & (p2_stun' = 0);
	[p2_H_RW] attack = 0 & turn = 2 & p2H > 0 & p2_stun != 5 & p1R > 0 & p2W > 0 ->
		(attack' = 103) & (p2_stun' = 0);
	[p2_H_RR] attack = 0 & turn = 2 & p2H > 0 & p2_stun != 5 & p1R > 0 & p2R > 0 ->
		(attack' = 104) & (p2_stun' = 0);
	[p2_H_RH] attack = 0 & turn = 2 & p2H > 0 & p2_stun != 5 & p1R > 0 & p2H > 0 ->
		(attack' = 105) & (p2_stun' = 0);
	[p2_H_HK] attack = 0 & turn = 2 & p2H > 0 & p2_stun != 5 & p1H > 0 & p2K > 0 ->
		(attack' = 106) & (p2_stun' = 0);
	[p2_H_HA] attack = 0 & turn = 2 & p2H > 0 & p2_stun != 5 & p1H > 0 & p2A > 0 ->
		(attack' = 107) & (p2_stun' = 0);
	[p2_H_HW] attack = 0 & turn = 2 & p2H > 0 & p2_stun != 5 & p1H > 0 & p2W > 0 ->
		(attack' = 108) & (p2_stun' = 0);
	[p2_H_HR] attack = 0 & turn = 2 & p2H > 0 & p2_stun != 5 & p1H > 0 & p2R > 0 ->
		(attack' = 109) & (p2_stun' = 0);
	[p2_H_HH] attack = 0 & turn = 2 & p2H > 0 & p2_stun != 5 & p1H > 0 & p2H > 0 ->
		(attack' = 110) & (p2_stun' = 0);

// Forced skip:
  [p2_skip]	attack = 0 & turn = 2 & p2_sum > 0 & (p2K = 0 | p2_stun = 1) & (p2A = 0 | p2_stun = 2) & (p2W = 0 | p2_stun = 3) & (p2R = 0 | p2_stun = 4) & ( p2H = 0 | p2_stun = 5) ->
	       (p2_stun' = 0) & (turn' = 1);
// Action resolution:
[K1_K2] attack = 1 & p2K > 0 ->
	Knight_accuracy : (p2K' = max(0, p2K - Knight_damage)) & (attack' = 0) & (turn' = 2) +
	1 - Knight_accuracy : (attack' = 0) & (turn' = 2);
[K1_A2] attack = 2 & p2A > 0 ->
	Knight_accuracy : (p2A' = max(0, p2A - Knight_damage)) & (attack' = 0) & (turn' = 2) +
	1 - Knight_accuracy : (attack' = 0) & (turn' = 2);
[K1_W2] attack = 3 & p2W > 0 ->
	Knight_accuracy : (p2W' = max(0, p2W - Knight_damage)) & (attack' = 0) & (turn' = 2) +
	1 - Knight_accuracy : (attack' = 0) & (turn' = 2);
[K1_R2] attack = 4 & p2R > 0 ->
	Knight_accuracy : (p2R' = max(0, p2R - Knight_damage)) & (attack' = 0) & (turn' = 2) +
	1 - Knight_accuracy : (attack' = 0) & (turn' = 2);
[K1_H2] attack = 5 & p2H > 0 ->
	Knight_accuracy : (p2H' = max(0, p2H - Knight_damage)) & (attack' = 0) & (turn' = 2) +
	1 - Knight_accuracy : (attack' = 0) & (turn' = 2);
[A1_K2] attack = 6 & p2K > 0 ->
	Archer_accuracy : (p2K' = max(0, p2K - Archer_damage)) & (attack' = 0) & (turn' = 2) +
	1 - Archer_accuracy : (attack' = 0) & (turn' = 2);
[A1_K2A2] attack = 7 & p2K > 0 & p2A > 0 ->
	pow(Archer_accuracy,2) : (p2K' = max(0, p2K - Archer_damage)) & (p2A' = max(0, p2A - Archer_damage)) & (attack' = 0) & (turn' = 2) +
	Archer_accuracy * (1 - Archer_accuracy) : (p2K' = max(0, p2K - Archer_damage)) & (attack' = 0) & (turn' = 2) +
	Archer_accuracy * (1 - Archer_accuracy) : (p2A' = max(0, p2A - Archer_damage)) & (attack' = 0) & (turn' = 2) +
	pow((1 - Archer_accuracy),2) : (attack' = 0) & (turn' = 2);
[A1_K2W2] attack = 8 & p2K > 0 & p2W > 0 ->
	pow(Archer_accuracy,2) : (p2K' = max(0, p2K - Archer_damage)) & (p2W' = max(0, p2W - Archer_damage)) & (attack' = 0) & (turn' = 2) +
	Archer_accuracy * (1 - Archer_accuracy) : (p2K' = max(0, p2K - Archer_damage)) & (attack' = 0) & (turn' = 2) +
	Archer_accuracy * (1 - Archer_accuracy) : (p2W' = max(0, p2W - Archer_damage)) & (attack' = 0) & (turn' = 2) +
	pow((1 - Archer_accuracy),2) : (attack' = 0) & (turn' = 2);
[A1_K2R2] attack = 9 & p2K > 0 & p2R > 0 ->
	pow(Archer_accuracy,2) : (p2K' = max(0, p2K - Archer_damage)) & (p2R' = max(0, p2R - Archer_damage)) & (attack' = 0) & (turn' = 2) +
	Archer_accuracy * (1 - Archer_accuracy) : (p2K' = max(0, p2K - Archer_damage)) & (attack' = 0) & (turn' = 2) +
	Archer_accuracy * (1 - Archer_accuracy) : (p2R' = max(0, p2R - Archer_damage)) & (attack' = 0) & (turn' = 2) +
	pow((1 - Archer_accuracy),2) : (attack' = 0) & (turn' = 2);
[A1_K2H2] attack = 10 & p2K > 0 & p2H > 0 ->
	pow(Archer_accuracy,2) : (p2K' = max(0, p2K - Archer_damage)) & (p2H' = max(0, p2H - Archer_damage)) & (attack' = 0) & (turn' = 2) +
	Archer_accuracy * (1 - Archer_accuracy) : (p2K' = max(0, p2K - Archer_damage)) & (attack' = 0) & (turn' = 2) +
	Archer_accuracy * (1 - Archer_accuracy) : (p2H' = max(0, p2H - Archer_damage)) & (attack' = 0) & (turn' = 2) +
	pow((1 - Archer_accuracy),2) : (attack' = 0) & (turn' = 2);
[A1_A2] attack = 11 & p2A > 0 ->
	Archer_accuracy : (p2A' = max(0, p2A - Archer_damage)) & (attack' = 0) & (turn' = 2) +
	1 - Archer_accuracy : (attack' = 0) & (turn' = 2);
[A1_A2W2] attack = 12 & p2A > 0 & p2W > 0 ->
	pow(Archer_accuracy,2) : (p2A' = max(0, p2A - Archer_damage)) & (p2W' = max(0, p2W - Archer_damage)) & (attack' = 0) & (turn' = 2) +
	Archer_accuracy * (1 - Archer_accuracy) : (p2A' = max(0, p2A - Archer_damage)) & (attack' = 0) & (turn' = 2) +
	Archer_accuracy * (1 - Archer_accuracy) : (p2W' = max(0, p2W - Archer_damage)) & (attack' = 0) & (turn' = 2) +
	pow((1 - Archer_accuracy),2) : (attack' = 0) & (turn' = 2);
[A1_A2R2] attack = 13 & p2A > 0 & p2R > 0 ->
	pow(Archer_accuracy,2) : (p2A' = max(0, p2A - Archer_damage)) & (p2R' = max(0, p2R - Archer_damage)) & (attack' = 0) & (turn' = 2) +
	Archer_accuracy * (1 - Archer_accuracy) : (p2A' = max(0, p2A - Archer_damage)) & (attack' = 0) & (turn' = 2) +
	Archer_accuracy * (1 - Archer_accuracy) : (p2R' = max(0, p2R - Archer_damage)) & (attack' = 0) & (turn' = 2) +
	pow((1 - Archer_accuracy),2) : (attack' = 0) & (turn' = 2);
[A1_A2H2] attack = 14 & p2A > 0 & p2H > 0 ->
	pow(Archer_accuracy,2) : (p2A' = max(0, p2A - Archer_damage)) & (p2H' = max(0, p2H - Archer_damage)) & (attack' = 0) & (turn' = 2) +
	Archer_accuracy * (1 - Archer_accuracy) : (p2A' = max(0, p2A - Archer_damage)) & (attack' = 0) & (turn' = 2) +
	Archer_accuracy * (1 - Archer_accuracy) : (p2H' = max(0, p2H - Archer_damage)) & (attack' = 0) & (turn' = 2) +
	pow((1 - Archer_accuracy),2) : (attack' = 0) & (turn' = 2);
[A1_W2] attack = 15 & p2W > 0 ->
	Archer_accuracy : (p2W' = max(0, p2W - Archer_damage)) & (attack' = 0) & (turn' = 2) +
	1 - Archer_accuracy : (attack' = 0) & (turn' = 2);
[A1_W2R2] attack = 16 & p2W > 0 & p2R > 0 ->
	pow(Archer_accuracy,2) : (p2W' = max(0, p2W - Archer_damage)) & (p2R' = max(0, p2R - Archer_damage)) & (attack' = 0) & (turn' = 2) +
	Archer_accuracy * (1 - Archer_accuracy) : (p2W' = max(0, p2W - Archer_damage)) & (attack' = 0) & (turn' = 2) +
	Archer_accuracy * (1 - Archer_accuracy) : (p2R' = max(0, p2R - Archer_damage)) & (attack' = 0) & (turn' = 2) +
	pow((1 - Archer_accuracy),2) : (attack' = 0) & (turn' = 2);
[A1_W2H2] attack = 17 & p2W > 0 & p2H > 0 ->
	pow(Archer_accuracy,2) : (p2W' = max(0, p2W - Archer_damage)) & (p2H' = max(0, p2H - Archer_damage)) & (attack' = 0) & (turn' = 2) +
	Archer_accuracy * (1 - Archer_accuracy) : (p2W' = max(0, p2W - Archer_damage)) & (attack' = 0) & (turn' = 2) +
	Archer_accuracy * (1 - Archer_accuracy) : (p2H' = max(0, p2H - Archer_damage)) & (attack' = 0) & (turn' = 2) +
	pow((1 - Archer_accuracy),2) : (attack' = 0) & (turn' = 2);
[A1_R2] attack = 18 & p2R > 0 ->
	Archer_accuracy : (p2R' = max(0, p2R - Archer_damage)) & (attack' = 0) & (turn' = 2) +
	1 - Archer_accuracy : (attack' = 0) & (turn' = 2);
[A1_R2H2] attack = 19 & p2R > 0 & p2H > 0 ->
	pow(Archer_accuracy,2) : (p2R' = max(0, p2R - Archer_damage)) & (p2H' = max(0, p2H - Archer_damage)) & (attack' = 0) & (turn' = 2) +
	Archer_accuracy * (1 - Archer_accuracy) : (p2R' = max(0, p2R - Archer_damage)) & (attack' = 0) & (turn' = 2) +
	Archer_accuracy * (1 - Archer_accuracy) : (p2H' = max(0, p2H - Archer_damage)) & (attack' = 0) & (turn' = 2) +
	pow((1 - Archer_accuracy),2) : (attack' = 0) & (turn' = 2);
[A1_H2] attack = 20 & p2H > 0 ->
	Archer_accuracy : (p2H' = max(0, p2H - Archer_damage)) & (attack' = 0) & (turn' = 2) +
	1 - Archer_accuracy : (attack' = 0) & (turn' = 2);
[W1_K2] attack = 21 & p2K > 0 ->
	Wizard_accuracy : (p2K' = max(0, p2K - Wizard_damage)) & (p2_stun' = 1) & (attack' = 0) & (turn' = 2) +
	1 - Wizard_accuracy : (attack' = 0) & (turn' = 2);
[W1_A2] attack = 22 & p2A > 0 ->
	Wizard_accuracy : (p2A' = max(0, p2A - Wizard_damage)) & (p2_stun' = 2) & (attack' = 0) & (turn' = 2) +
	1 - Wizard_accuracy : (attack' = 0) & (turn' = 2);
[W1_W2] attack = 23 & p2W > 0 ->
	Wizard_accuracy : (p2W' = max(0, p2W - Wizard_damage)) & (p2_stun' = 3) & (attack' = 0) & (turn' = 2) +
	1 - Wizard_accuracy : (attack' = 0) & (turn' = 2);
[W1_R2] attack = 24 & p2R > 0 ->
	Wizard_accuracy : (p2R' = max(0, p2R - Wizard_damage)) & (p2_stun' = 4) & (attack' = 0) & (turn' = 2) +
	1 - Wizard_accuracy : (attack' = 0) & (turn' = 2);
[W1_H2] attack = 25 & p2H > 0 ->
	Wizard_accuracy : (p2H' = max(0, p2H - Wizard_damage)) & (p2_stun' = 5) & (attack' = 0) & (turn' = 2) +
	1 - Wizard_accuracy : (attack' = 0) & (turn' = 2);
[R1_K2] attack = 26 & p2K > 0 & p2K > Rogue_execute ->
	Rogue_accuracy : (p2K' = p2K - Rogue_damage) & (attack' = 0) & (turn' = 2) +
	1 - Rogue_accuracy : (attack' = 0) & (turn' = 2);
[R1_K2] attack = 26 & p2K > 0 & p2K <= Rogue_execute ->
	Rogue_accuracy : (p2K' = 0) & (attack' = 0) & (turn' = 2) +
	1 - Rogue_accuracy : (attack' = 0) & (turn' = 2);
[R1_A2] attack = 27 & p2A > 0 & p2A > Rogue_execute ->
	Rogue_accuracy : (p2A' = p2A - Rogue_damage) & (attack' = 0) & (turn' = 2) +
	1 - Rogue_accuracy : (attack' = 0) & (turn' = 2);
[R1_A2] attack = 27 & p2A > 0 & p2A <= Rogue_execute ->
	Rogue_accuracy : (p2A' = 0) & (attack' = 0) & (turn' = 2) +
	1 - Rogue_accuracy : (attack' = 0) & (turn' = 2);
[R1_W2] attack = 28 & p2W > 0 & p2W > Rogue_execute ->
	Rogue_accuracy : (p2W' = p2W - Rogue_damage) & (attack' = 0) & (turn' = 2) +
	1 - Rogue_accuracy : (attack' = 0) & (turn' = 2);
[R1_W2] attack = 28 & p2W > 0 & p2W <= Rogue_execute ->
	Rogue_accuracy : (p2W' = 0) & (attack' = 0) & (turn' = 2) +
	1 - Rogue_accuracy : (attack' = 0) & (turn' = 2);
[R1_R2] attack = 29 & p2R > 0 & p2R > Rogue_execute ->
	Rogue_accuracy : (p2R' = p2R - Rogue_damage) & (attack' = 0) & (turn' = 2) +
	1 - Rogue_accuracy : (attack' = 0) & (turn' = 2);
[R1_R2] attack = 29 & p2R > 0 & p2R <= Rogue_execute ->
	Rogue_accuracy : (p2R' = 0) & (attack' = 0) & (turn' = 2) +
	1 - Rogue_accuracy : (attack' = 0) & (turn' = 2);
[R1_H2] attack = 30 & p2H > 0 & p2H > Rogue_execute ->
	Rogue_accuracy : (p2H' = p2H - Rogue_damage) & (attack' = 0) & (turn' = 2) +
	1 - Rogue_accuracy : (attack' = 0) & (turn' = 2);
[R1_H2] attack = 30 & p2H > 0 & p2H <= Rogue_execute ->
	Rogue_accuracy : (p2H' = 0) & (attack' = 0) & (turn' = 2) +
	1 - Rogue_accuracy : (attack' = 0) & (turn' = 2);
[H1_K2K1] attack = 31 & p2K > 0 & p1K > 0 ->
	Healer_accuracy : (p2K' = max(0, p2K - Healer_damage)) & (p1K' = min(Knight_health,(p1K + Healer_heal))) & (attack' = 0) & (turn' = 2) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 2);
[H1_K2A1] attack = 32 & p2K > 0 & p1A > 0 ->
	Healer_accuracy : (p2K' = max(0, p2K - Healer_damage)) & (p1A' = min(Archer_health,(p1A + Healer_heal))) & (attack' = 0) & (turn' = 2) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 2);
[H1_K2W1] attack = 33 & p2K > 0 & p1W > 0 ->
	Healer_accuracy : (p2K' = max(0, p2K - Healer_damage)) & (p1W' = min(Wizard_health,(p1W + Healer_heal))) & (attack' = 0) & (turn' = 2) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 2);
[H1_K2R1] attack = 34 & p2K > 0 & p1R > 0 ->
	Healer_accuracy : (p2K' = max(0, p2K - Healer_damage)) & (p1R' = min(Rogue_health,(p1R + Healer_heal))) & (attack' = 0) & (turn' = 2) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 2);
[H1_K2H1] attack = 35 & p2K > 0 & p1H > 0 ->
	Healer_accuracy : (p2K' = max(0, p2K - Healer_damage)) & (p1H' = min(Healer_health,(p1H + Healer_heal))) & (attack' = 0) & (turn' = 2) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 2);
[H1_A2K1] attack = 36 & p2A > 0 & p1K > 0 ->
	Healer_accuracy : (p2A' = max(0, p2A - Healer_damage)) & (p1K' = min(Knight_health,(p1K + Healer_heal))) & (attack' = 0) & (turn' = 2) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 2);
[H1_A2A1] attack = 37 & p2A > 0 & p1A > 0 ->
	Healer_accuracy : (p2A' = max(0, p2A - Healer_damage)) & (p1A' = min(Archer_health,(p1A + Healer_heal))) & (attack' = 0) & (turn' = 2) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 2);
[H1_A2W1] attack = 38 & p2A > 0 & p1W > 0 ->
	Healer_accuracy : (p2A' = max(0, p2A - Healer_damage)) & (p1W' = min(Wizard_health,(p1W + Healer_heal))) & (attack' = 0) & (turn' = 2) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 2);
[H1_A2R1] attack = 39 & p2A > 0 & p1R > 0 ->
	Healer_accuracy : (p2A' = max(0, p2A - Healer_damage)) & (p1R' = min(Rogue_health,(p1R + Healer_heal))) & (attack' = 0) & (turn' = 2) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 2);
[H1_A2H1] attack = 40 & p2A > 0 & p1H > 0 ->
	Healer_accuracy : (p2A' = max(0, p2A - Healer_damage)) & (p1H' = min(Healer_health,(p1H + Healer_heal))) & (attack' = 0) & (turn' = 2) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 2);
[H1_W2K1] attack = 41 & p2W > 0 & p1K > 0 ->
	Healer_accuracy : (p2W' = max(0, p2W - Healer_damage)) & (p1K' = min(Knight_health,(p1K + Healer_heal))) & (attack' = 0) & (turn' = 2) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 2);
[H1_W2A1] attack = 42 & p2W > 0 & p1A > 0 ->
	Healer_accuracy : (p2W' = max(0, p2W - Healer_damage)) & (p1A' = min(Archer_health,(p1A + Healer_heal))) & (attack' = 0) & (turn' = 2) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 2);
[H1_W2W1] attack = 43 & p2W > 0 & p1W > 0 ->
	Healer_accuracy : (p2W' = max(0, p2W - Healer_damage)) & (p1W' = min(Wizard_health,(p1W + Healer_heal))) & (attack' = 0) & (turn' = 2) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 2);
[H1_W2R1] attack = 44 & p2W > 0 & p1R > 0 ->
	Healer_accuracy : (p2W' = max(0, p2W - Healer_damage)) & (p1R' = min(Rogue_health,(p1R + Healer_heal))) & (attack' = 0) & (turn' = 2) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 2);
[H1_W2H1] attack = 45 & p2W > 0 & p1H > 0 ->
	Healer_accuracy : (p2W' = max(0, p2W - Healer_damage)) & (p1H' = min(Healer_health,(p1H + Healer_heal))) & (attack' = 0) & (turn' = 2) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 2);
[H1_R2K1] attack = 46 & p2R > 0 & p1K > 0 ->
	Healer_accuracy : (p2R' = max(0, p2R - Healer_damage)) & (p1K' = min(Knight_health,(p1K + Healer_heal))) & (attack' = 0) & (turn' = 2) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 2);
[H1_R2A1] attack = 47 & p2R > 0 & p1A > 0 ->
	Healer_accuracy : (p2R' = max(0, p2R - Healer_damage)) & (p1A' = min(Archer_health,(p1A + Healer_heal))) & (attack' = 0) & (turn' = 2) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 2);
[H1_R2W1] attack = 48 & p2R > 0 & p1W > 0 ->
	Healer_accuracy : (p2R' = max(0, p2R - Healer_damage)) & (p1W' = min(Wizard_health,(p1W + Healer_heal))) & (attack' = 0) & (turn' = 2) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 2);
[H1_R2R1] attack = 49 & p2R > 0 & p1R > 0 ->
	Healer_accuracy : (p2R' = max(0, p2R - Healer_damage)) & (p1R' = min(Rogue_health,(p1R + Healer_heal))) & (attack' = 0) & (turn' = 2) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 2);
[H1_R2H1] attack = 50 & p2R > 0 & p1H > 0 ->
	Healer_accuracy : (p2R' = max(0, p2R - Healer_damage)) & (p1H' = min(Healer_health,(p1H + Healer_heal))) & (attack' = 0) & (turn' = 2) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 2);
[H1_H2K1] attack = 51 & p2H > 0 & p1K > 0 ->
	Healer_accuracy : (p2H' = max(0, p2H - Healer_damage)) & (p1K' = min(Knight_health,(p1K + Healer_heal))) & (attack' = 0) & (turn' = 2) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 2);
[H1_H2A1] attack = 52 & p2H > 0 & p1A > 0 ->
	Healer_accuracy : (p2H' = max(0, p2H - Healer_damage)) & (p1A' = min(Archer_health,(p1A + Healer_heal))) & (attack' = 0) & (turn' = 2) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 2);
[H1_H2W1] attack = 53 & p2H > 0 & p1W > 0 ->
	Healer_accuracy : (p2H' = max(0, p2H - Healer_damage)) & (p1W' = min(Wizard_health,(p1W + Healer_heal))) & (attack' = 0) & (turn' = 2) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 2);
[H1_H2R1] attack = 54 & p2H > 0 & p1R > 0 ->
	Healer_accuracy : (p2H' = max(0, p2H - Healer_damage)) & (p1R' = min(Rogue_health,(p1R + Healer_heal))) & (attack' = 0) & (turn' = 2) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 2);
[H1_H2H1] attack = 55 & p2H > 0 & p1H > 0 ->
	Healer_accuracy : (p2H' = max(0, p2H - Healer_damage)) & (p1H' = min(Healer_health,(p1H + Healer_heal))) & (attack' = 0) & (turn' = 2) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 2);
[K2_K1] attack = 56 & p1K > 0 ->
	Knight_accuracy : (p1K' = max(0, p1K - Knight_damage)) & (attack' = 0) & (turn' = 1) +
	1 - Knight_accuracy : (attack' = 0) & (turn' = 1);
[K2_A1] attack = 57 & p1A > 0 ->
	Knight_accuracy : (p1A' = max(0, p1A - Knight_damage)) & (attack' = 0) & (turn' = 1) +
	1 - Knight_accuracy : (attack' = 0) & (turn' = 1);
[K2_W1] attack = 58 & p1W > 0 ->
	Knight_accuracy : (p1W' = max(0, p1W - Knight_damage)) & (attack' = 0) & (turn' = 1) +
	1 - Knight_accuracy : (attack' = 0) & (turn' = 1);
[K2_R1] attack = 59 & p1R > 0 ->
	Knight_accuracy : (p1R' = max(0, p1R - Knight_damage)) & (attack' = 0) & (turn' = 1) +
	1 - Knight_accuracy : (attack' = 0) & (turn' = 1);
[K2_H1] attack = 60 & p1H > 0 ->
	Knight_accuracy : (p1H' = max(0, p1H - Knight_damage)) & (attack' = 0) & (turn' = 1) +
	1 - Knight_accuracy : (attack' = 0) & (turn' = 1);
[A2_K1] attack = 61 & p1K > 0 ->
	Archer_accuracy : (p1K' = max(0, p1K - Archer_damage)) & (attack' = 0) & (turn' = 1) +
	1 - Archer_accuracy : (attack' = 0) & (turn' = 1);
[A2_K1A1] attack = 62 & p1K > 0 & p1A > 0 ->
	pow(Archer_accuracy,2) : (p1K' = max(0, p1K - Archer_damage)) & (p1A' = max(0, p1A - Archer_damage)) & (attack' = 0) & (turn' = 1) +
	Archer_accuracy * (1 - Archer_accuracy) : (p1K' = max(0, p1K - Archer_damage)) & (attack' = 0) & (turn' = 1) +
	Archer_accuracy * (1 - Archer_accuracy) : (p1A' = max(0, p1A - Archer_damage)) & (attack' = 0) & (turn' = 1) +
	pow((1 - Archer_accuracy),2) : (attack' = 0) & (turn' = 1);
[A2_K1W1] attack = 63 & p1K > 0 & p1W > 0 ->
	pow(Archer_accuracy,2) : (p1K' = max(0, p1K - Archer_damage)) & (p1W' = max(0, p1W - Archer_damage)) & (attack' = 0) & (turn' = 1) +
	Archer_accuracy * (1 - Archer_accuracy) : (p1K' = max(0, p1K - Archer_damage)) & (attack' = 0) & (turn' = 1) +
	Archer_accuracy * (1 - Archer_accuracy) : (p1W' = max(0, p1W - Archer_damage)) & (attack' = 0) & (turn' = 1) +
	pow((1 - Archer_accuracy),2) : (attack' = 0) & (turn' = 1);
[A2_K1R1] attack = 64 & p1K > 0 & p1R > 0 ->
	pow(Archer_accuracy,2) : (p1K' = max(0, p1K - Archer_damage)) & (p1R' = max(0, p1R - Archer_damage)) & (attack' = 0) & (turn' = 1) +
	Archer_accuracy * (1 - Archer_accuracy) : (p1K' = max(0, p1K - Archer_damage)) & (attack' = 0) & (turn' = 1) +
	Archer_accuracy * (1 - Archer_accuracy) : (p1R' = max(0, p1R - Archer_damage)) & (attack' = 0) & (turn' = 1) +
	pow((1 - Archer_accuracy),2) : (attack' = 0) & (turn' = 1);
[A2_K1H1] attack = 65 & p1K > 0 & p1H > 0 ->
	pow(Archer_accuracy,2) : (p1K' = max(0, p1K - Archer_damage)) & (p1H' = max(0, p1H - Archer_damage)) & (attack' = 0) & (turn' = 1) +
	Archer_accuracy * (1 - Archer_accuracy) : (p1K' = max(0, p1K - Archer_damage)) & (attack' = 0) & (turn' = 1) +
	Archer_accuracy * (1 - Archer_accuracy) : (p1H' = max(0, p1H - Archer_damage)) & (attack' = 0) & (turn' = 1) +
	pow((1 - Archer_accuracy),2) : (attack' = 0) & (turn' = 1);
[A2_A1] attack = 66 & p1A > 0 ->
	Archer_accuracy : (p1A' = max(0, p1A - Archer_damage)) & (attack' = 0) & (turn' = 1) +
	1 - Archer_accuracy : (attack' = 0) & (turn' = 1);
[A2_A1W1] attack = 67 & p1A > 0 & p1W > 0 ->
	pow(Archer_accuracy,2) : (p1A' = max(0, p1A - Archer_damage)) & (p1W' = max(0, p1W - Archer_damage)) & (attack' = 0) & (turn' = 1) +
	Archer_accuracy * (1 - Archer_accuracy) : (p1A' = max(0, p1A - Archer_damage)) & (attack' = 0) & (turn' = 1) +
	Archer_accuracy * (1 - Archer_accuracy) : (p1W' = max(0, p1W - Archer_damage)) & (attack' = 0) & (turn' = 1) +
	pow((1 - Archer_accuracy),2) : (attack' = 0) & (turn' = 1);
[A2_A1R1] attack = 68 & p1A > 0 & p1R > 0 ->
	pow(Archer_accuracy,2) : (p1A' = max(0, p1A - Archer_damage)) & (p1R' = max(0, p1R - Archer_damage)) & (attack' = 0) & (turn' = 1) +
	Archer_accuracy * (1 - Archer_accuracy) : (p1A' = max(0, p1A - Archer_damage)) & (attack' = 0) & (turn' = 1) +
	Archer_accuracy * (1 - Archer_accuracy) : (p1R' = max(0, p1R - Archer_damage)) & (attack' = 0) & (turn' = 1) +
	pow((1 - Archer_accuracy),2) : (attack' = 0) & (turn' = 1);
[A2_A1H1] attack = 69 & p1A > 0 & p1H > 0 ->
	pow(Archer_accuracy,2) : (p1A' = max(0, p1A - Archer_damage)) & (p1H' = max(0, p1H - Archer_damage)) & (attack' = 0) & (turn' = 1) +
	Archer_accuracy * (1 - Archer_accuracy) : (p1A' = max(0, p1A - Archer_damage)) & (attack' = 0) & (turn' = 1) +
	Archer_accuracy * (1 - Archer_accuracy) : (p1H' = max(0, p1H - Archer_damage)) & (attack' = 0) & (turn' = 1) +
	pow((1 - Archer_accuracy),2) : (attack' = 0) & (turn' = 1);
[A2_W1] attack = 70 & p1W > 0 ->
	Archer_accuracy : (p1W' = max(0, p1W - Archer_damage)) & (attack' = 0) & (turn' = 1) +
	1 - Archer_accuracy : (attack' = 0) & (turn' = 1);
[A2_W1R1] attack = 71 & p1W > 0 & p1R > 0 ->
	pow(Archer_accuracy,2) : (p1W' = max(0, p1W - Archer_damage)) & (p1R' = max(0, p1R - Archer_damage)) & (attack' = 0) & (turn' = 1) +
	Archer_accuracy * (1 - Archer_accuracy) : (p1W' = max(0, p1W - Archer_damage)) & (attack' = 0) & (turn' = 1) +
	Archer_accuracy * (1 - Archer_accuracy) : (p1R' = max(0, p1R - Archer_damage)) & (attack' = 0) & (turn' = 1) +
	pow((1 - Archer_accuracy),2) : (attack' = 0) & (turn' = 1);
[A2_W1H1] attack = 72 & p1W > 0 & p1H > 0 ->
	pow(Archer_accuracy,2) : (p1W' = max(0, p1W - Archer_damage)) & (p1H' = max(0, p1H - Archer_damage)) & (attack' = 0) & (turn' = 1) +
	Archer_accuracy * (1 - Archer_accuracy) : (p1W' = max(0, p1W - Archer_damage)) & (attack' = 0) & (turn' = 1) +
	Archer_accuracy * (1 - Archer_accuracy) : (p1H' = max(0, p1H - Archer_damage)) & (attack' = 0) & (turn' = 1) +
	pow((1 - Archer_accuracy),2) : (attack' = 0) & (turn' = 1);
[A2_R1] attack = 73 & p1R > 0 ->
	Archer_accuracy : (p1R' = max(0, p1R - Archer_damage)) & (attack' = 0) & (turn' = 1) +
	1 - Archer_accuracy : (attack' = 0) & (turn' = 1);
[A2_R1H1] attack = 74 & p1R > 0 & p1H > 0 ->
	pow(Archer_accuracy,2) : (p1R' = max(0, p1R - Archer_damage)) & (p1H' = max(0, p1H - Archer_damage)) & (attack' = 0) & (turn' = 1) +
	Archer_accuracy * (1 - Archer_accuracy) : (p1R' = max(0, p1R - Archer_damage)) & (attack' = 0) & (turn' = 1) +
	Archer_accuracy * (1 - Archer_accuracy) : (p1H' = max(0, p1H - Archer_damage)) & (attack' = 0) & (turn' = 1) +
	pow((1 - Archer_accuracy),2) : (attack' = 0) & (turn' = 1);
[A2_H1] attack = 75 & p1H > 0 ->
	Archer_accuracy : (p1H' = max(0, p1H - Archer_damage)) & (attack' = 0) & (turn' = 1) +
	1 - Archer_accuracy : (attack' = 0) & (turn' = 1);
[W2_K1] attack = 76 & p1K > 0 ->
	Wizard_accuracy : (p1K' = max(0, p1K - Wizard_damage)) & (p1_stun' = 1) & (attack' = 0) & (turn' = 1) +
	1 - Wizard_accuracy : (attack' = 0) & (turn' = 1);
[W2_A1] attack = 77 & p1A > 0 ->
	Wizard_accuracy : (p1A' = max(0, p1A - Wizard_damage)) & (p1_stun' = 2) & (attack' = 0) & (turn' = 1) +
	1 - Wizard_accuracy : (attack' = 0) & (turn' = 1);
[W2_W1] attack = 78 & p1W > 0 ->
	Wizard_accuracy : (p1W' = max(0, p1W - Wizard_damage)) & (p1_stun' = 3) & (attack' = 0) & (turn' = 1) +
	1 - Wizard_accuracy : (attack' = 0) & (turn' = 1);
[W2_R1] attack = 79 & p1R > 0 ->
	Wizard_accuracy : (p1R' = max(0, p1R - Wizard_damage)) & (p1_stun' = 4) & (attack' = 0) & (turn' = 1) +
	1 - Wizard_accuracy : (attack' = 0) & (turn' = 1);
[W2_H1] attack = 80 & p1H > 0 ->
	Wizard_accuracy : (p1H' = max(0, p1H - Wizard_damage)) & (p1_stun' = 5) & (attack' = 0) & (turn' = 1) +
	1 - Wizard_accuracy : (attack' = 0) & (turn' = 1);
[R2_K1] attack = 81 & p1K > 0 & p1K > Rogue_execute ->
	Rogue_accuracy : (p1K' = p1K - Rogue_damage) & (attack' = 0) & (turn' = 1) +
	1 - Rogue_accuracy : (attack' = 0) & (turn' = 1);
[R2_K1] attack = 81 & p1K > 0 & p1K <= Rogue_execute ->
	Rogue_accuracy : (p1K' = 0) & (attack' = 0) & (turn' = 1) +
	1 - Rogue_accuracy : (attack' = 0) & (turn' = 1);
[R2_A1] attack = 82 & p1A > 0 & p1A > Rogue_execute ->
	Rogue_accuracy : (p1A' = p1A - Rogue_damage) & (attack' = 0) & (turn' = 1) +
	1 - Rogue_accuracy : (attack' = 0) & (turn' = 1);
[R2_A1] attack = 82 & p1A > 0 & p1A <= Rogue_execute ->
	Rogue_accuracy : (p1A' = 0) & (attack' = 0) & (turn' = 1) +
	1 - Rogue_accuracy : (attack' = 0) & (turn' = 1);
[R2_W1] attack = 83 & p1W > 0 & p1W > Rogue_execute ->
	Rogue_accuracy : (p1W' = p1W - Rogue_damage) & (attack' = 0) & (turn' = 1) +
	1 - Rogue_accuracy : (attack' = 0) & (turn' = 1);
[R2_W1] attack = 83 & p1W > 0 & p1W <= Rogue_execute ->
	Rogue_accuracy : (p1W' = 0) & (attack' = 0) & (turn' = 1) +
	1 - Rogue_accuracy : (attack' = 0) & (turn' = 1);
[R2_R1] attack = 84 & p1R > 0 & p1R > Rogue_execute ->
	Rogue_accuracy : (p1R' = p1R - Rogue_damage) & (attack' = 0) & (turn' = 1) +
	1 - Rogue_accuracy : (attack' = 0) & (turn' = 1);
[R2_R1] attack = 84 & p1R > 0 & p1R <= Rogue_execute ->
	Rogue_accuracy : (p1R' = 0) & (attack' = 0) & (turn' = 1) +
	1 - Rogue_accuracy : (attack' = 0) & (turn' = 1);
[R2_H1] attack = 85 & p1H > 0 & p1H > Rogue_execute ->
	Rogue_accuracy : (p1H' = p1H - Rogue_damage) & (attack' = 0) & (turn' = 1) +
	1 - Rogue_accuracy : (attack' = 0) & (turn' = 1);
[R2_H1] attack = 85 & p1H > 0 & p1H <= Rogue_execute ->
	Rogue_accuracy : (p1H' = 0) & (attack' = 0) & (turn' = 1) +
	1 - Rogue_accuracy : (attack' = 0) & (turn' = 1);
[H2_K1K2] attack = 86 & p1K > 0 & p2K > 0 ->
	Healer_accuracy : (p1K' = max(0, p1K - Healer_damage)) & (p2K' = min(Knight_health,(p2K + Healer_heal))) & (attack' = 0) & (turn' = 1) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 1);
[H2_K1A2] attack = 87 & p1K > 0 & p2A > 0 ->
	Healer_accuracy : (p1K' = max(0, p1K - Healer_damage)) & (p2A' = min(Archer_health,(p2A + Healer_heal))) & (attack' = 0) & (turn' = 1) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 1);
[H2_K1W2] attack = 88 & p1K > 0 & p2W > 0 ->
	Healer_accuracy : (p1K' = max(0, p1K - Healer_damage)) & (p2W' = min(Wizard_health,(p2W + Healer_heal))) & (attack' = 0) & (turn' = 1) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 1);
[H2_K1R2] attack = 89 & p1K > 0 & p2R > 0 ->
	Healer_accuracy : (p1K' = max(0, p1K - Healer_damage)) & (p2R' = min(Rogue_health,(p2R + Healer_heal))) & (attack' = 0) & (turn' = 1) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 1);
[H2_K1H2] attack = 90 & p1K > 0 & p2H > 0 ->
	Healer_accuracy : (p1K' = max(0, p1K - Healer_damage)) & (p2H' = min(Healer_health,(p2H + Healer_heal))) & (attack' = 0) & (turn' = 1) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 1);
[H2_A1K2] attack = 91 & p1A > 0 & p2K > 0 ->
	Healer_accuracy : (p1A' = max(0, p1A - Healer_damage)) & (p2K' = min(Knight_health,(p2K + Healer_heal))) & (attack' = 0) & (turn' = 1) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 1);
[H2_A1A2] attack = 92 & p1A > 0 & p2A > 0 ->
	Healer_accuracy : (p1A' = max(0, p1A - Healer_damage)) & (p2A' = min(Archer_health,(p2A + Healer_heal))) & (attack' = 0) & (turn' = 1) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 1);
[H2_A1W2] attack = 93 & p1A > 0 & p2W > 0 ->
	Healer_accuracy : (p1A' = max(0, p1A - Healer_damage)) & (p2W' = min(Wizard_health,(p2W + Healer_heal))) & (attack' = 0) & (turn' = 1) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 1);
[H2_A1R2] attack = 94 & p1A > 0 & p2R > 0 ->
	Healer_accuracy : (p1A' = max(0, p1A - Healer_damage)) & (p2R' = min(Rogue_health,(p2R + Healer_heal))) & (attack' = 0) & (turn' = 1) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 1);
[H2_A1H2] attack = 95 & p1A > 0 & p2H > 0 ->
	Healer_accuracy : (p1A' = max(0, p1A - Healer_damage)) & (p2H' = min(Healer_health,(p2H + Healer_heal))) & (attack' = 0) & (turn' = 1) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 1);
[H2_W1K2] attack = 96 & p1W > 0 & p2K > 0 ->
	Healer_accuracy : (p1W' = max(0, p1W - Healer_damage)) & (p2K' = min(Knight_health,(p2K + Healer_heal))) & (attack' = 0) & (turn' = 1) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 1);
[H2_W1A2] attack = 97 & p1W > 0 & p2A > 0 ->
	Healer_accuracy : (p1W' = max(0, p1W - Healer_damage)) & (p2A' = min(Archer_health,(p2A + Healer_heal))) & (attack' = 0) & (turn' = 1) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 1);
[H2_W1W2] attack = 98 & p1W > 0 & p2W > 0 ->
	Healer_accuracy : (p1W' = max(0, p1W - Healer_damage)) & (p2W' = min(Wizard_health,(p2W + Healer_heal))) & (attack' = 0) & (turn' = 1) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 1);
[H2_W1R2] attack = 99 & p1W > 0 & p2R > 0 ->
	Healer_accuracy : (p1W' = max(0, p1W - Healer_damage)) & (p2R' = min(Rogue_health,(p2R + Healer_heal))) & (attack' = 0) & (turn' = 1) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 1);
[H2_W1H2] attack = 100 & p1W > 0 & p2H > 0 ->
	Healer_accuracy : (p1W' = max(0, p1W - Healer_damage)) & (p2H' = min(Healer_health,(p2H + Healer_heal))) & (attack' = 0) & (turn' = 1) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 1);
[H2_R1K2] attack = 101 & p1R > 0 & p2K > 0 ->
	Healer_accuracy : (p1R' = max(0, p1R - Healer_damage)) & (p2K' = min(Knight_health,(p2K + Healer_heal))) & (attack' = 0) & (turn' = 1) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 1);
[H2_R1A2] attack = 102 & p1R > 0 & p2A > 0 ->
	Healer_accuracy : (p1R' = max(0, p1R - Healer_damage)) & (p2A' = min(Archer_health,(p2A + Healer_heal))) & (attack' = 0) & (turn' = 1) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 1);
[H2_R1W2] attack = 103 & p1R > 0 & p2W > 0 ->
	Healer_accuracy : (p1R' = max(0, p1R - Healer_damage)) & (p2W' = min(Wizard_health,(p2W + Healer_heal))) & (attack' = 0) & (turn' = 1) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 1);
[H2_R1R2] attack = 104 & p1R > 0 & p2R > 0 ->
	Healer_accuracy : (p1R' = max(0, p1R - Healer_damage)) & (p2R' = min(Rogue_health,(p2R + Healer_heal))) & (attack' = 0) & (turn' = 1) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 1);
[H2_R1H2] attack = 105 & p1R > 0 & p2H > 0 ->
	Healer_accuracy : (p1R' = max(0, p1R - Healer_damage)) & (p2H' = min(Healer_health,(p2H + Healer_heal))) & (attack' = 0) & (turn' = 1) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 1);
[H2_H1K2] attack = 106 & p1H > 0 & p2K > 0 ->
	Healer_accuracy : (p1H' = max(0, p1H - Healer_damage)) & (p2K' = min(Knight_health,(p2K + Healer_heal))) & (attack' = 0) & (turn' = 1) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 1);
[H2_H1A2] attack = 107 & p1H > 0 & p2A > 0 ->
	Healer_accuracy : (p1H' = max(0, p1H - Healer_damage)) & (p2A' = min(Archer_health,(p2A + Healer_heal))) & (attack' = 0) & (turn' = 1) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 1);
[H2_H1W2] attack = 108 & p1H > 0 & p2W > 0 ->
	Healer_accuracy : (p1H' = max(0, p1H - Healer_damage)) & (p2W' = min(Wizard_health,(p2W + Healer_heal))) & (attack' = 0) & (turn' = 1) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 1);
[H2_H1R2] attack = 109 & p1H > 0 & p2R > 0 ->
	Healer_accuracy : (p1H' = max(0, p1H - Healer_damage)) & (p2R' = min(Rogue_health,(p2R + Healer_heal))) & (attack' = 0) & (turn' = 1) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 1);
[H2_H1H2] attack = 110 & p1H > 0 & p2H > 0 ->
	Healer_accuracy : (p1H' = max(0, p1H - Healer_damage)) & (p2H' = min(Healer_health,(p2H + Healer_heal))) & (attack' = 0) & (turn' = 1) +
	1 - Healer_accuracy : (attack' = 0) & (turn' = 1);

endmodule

formula p1_sum = p1K+p1A+p1W+p1R+p1H;
formula p2_sum = p2K+p2A+p2W+p2R+p2H;
label "p1_wins" = p1_sum > 0 & p2_sum = 0;
label "p2_wins" = p1_sum = 0 & p2_sum > 0;
formula health_ceiling 	= max(Knight_health, Archer_health, Wizard_health, Rogue_health, Healer_health);
